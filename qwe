#include <stdio.h>

void allocate(int blocks[], int m, int process[], int n, int fit) {
    for (int i = 0; i < n; i++) {
        int idx = -1;
        for (int j = 0; j < m; j++) {
            if (blocks[j] >= process[i] && (idx == -1 || 
                (fit == 1 && blocks[j] < blocks[idx]) || 
                (fit == 2 && blocks[j] > blocks[idx]) || 
                (fit == 0))) {
                idx = j;
            }
        }
        if (idx != -1) {
            printf("Process %d -> Block %d\n", i + 1, idx + 1);
            blocks[idx] -= process[i];
        } else printf("Process %d -> Not Allocated\n", i + 1);
    }
}

int main() {
    int blocks[] = {100, 500, 200, 300, 600}, process[] = {212, 417, 112, 426};
    int m = sizeof(blocks) / sizeof(blocks[0]), n = sizeof(process) / sizeof(process[0]);
    printf("First-Fit:\n"); allocate(blocks, m, process, n, 0);
    printf("Best-Fit:\n"); allocate(blocks, m, process, n, 1);
    printf("Worst-Fit:\n"); allocate(blocks, m, process, n, 2);
    return 0;
}