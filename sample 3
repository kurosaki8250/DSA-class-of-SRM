#include <stdio.h>
#include <stdlib.h>

int** allocateMatrix(int rows, int cols) {
    int** matrix = (int**)malloc(rows * sizeof(int*));
    for (int i = 0; i < rows; i++) {
        matrix[i] = (int*)malloc(cols * sizeof(int));
    }
    return matrix;
}

void freeMatrix(int** matrix, int rows) {
    for (int i = 0; i < rows; i++) {
        free(matrix[i]);
    }
    free(matrix);
}

int** multiplyMatrices(int** A, int Arows, int Acols, int** B, int Brows, int Bcols) {
    if (Acols != Brows) {
        fprintf(stderr, "Matrix dimensions do not match for multiplication.\n");
        return NULL;
    }

    int** C = allocateMatrix(Arows, Bcols);

    for (int i = 0; i < Arows; i++) {
        for (int j = 0; j < Bcols; j++) {
            C[i][j] = 0;
            for (int k = 0; k < Acols; k++) {
                C[i][j] += A[i][k] * B[k][j];
            }
        }
    }

    return C;
}

void printMatrix(int** matrix, int rows, int cols) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int Arows = 2, Acols = 3;
    int Brows = 3, Bcols = 2;

    int** A = allocateMatrix(Arows, Acols);
    int** B = allocateMatrix(Brows, Bcols);

    A[0][0] = 1; A[0][1] = 2; A[0][2] = 3;
    A[1][0] = 4; A[1][1] = 5; A[1][2] = 6;

    B[0][0] = 7; B[0][1] = 8;
    B[1][0] = 9; B[1][1] = 10;
    B[2][0] = 11; B[2][1] = 12;

    int** C = multiplyMatrices(A, Arows, Acols, B, Brows, Bcols);

    if (C != NULL) {
        printf("Matrix C (result of A * B):\n");
        printMatrix(C, Arows, Bcols);

        freeMatrix(C, Arows);
    }

    freeMatrix(A, Arows);
    freeMatrix(B, Brows);

    return 0;
}
